$(function(){


	var images = [];
	var MAX_IMAGE_HEIGHT = 550;

	function matchHeight(){
		var maxHeight=0;
		$('.iBoxCont').each(function(){
			var h = $(this).height();
			if (h > maxHeight){
				maxHeight = h;
			}
		});
		$('.iBoxCont').height(maxHeight);
	}
	
	function setWidth(){
		$('.interactionBoxContainer').width(
			$('.scanStatusContainer').outerWidth()+
			$('.scanStartContainer').outerWidth() +
			40
		)
	}
	
	function updateBoxes(){
		matchHeight();
		setWidth();
	}
	updateBoxes();

	function setConnectionUp(){
		$('#connectionStatus').removeClass('inactive');
		$('#connectionStatus').addClass('active');
	}
	function setConnectionDown(){
		$('#connectionStatus').removeClass('active');
		$('#connectionStatus').addClass('inactive');
	}
	function setScannerAvailable(){
		$('#scanStatusText').removeClass('isBusy');
		$('#scanStatusText').addClass('isAvailable');
		$('#scanStatusText').text('Available');
		$('.activeScanInfoBox').hide();
		updateBoxes();
	}
	function setScannerBusy(StatusObj){
		$('#scanStatusText').removeClass('isAvailable');
		$('#scanStatusText').addClass('isBusy');
		$('#scanStatusText').text('Busy');

		var infoBox = $('.activeScanInfoBox');
		infoBox.empty();
		infoBox.append('<p>Started: ' + StatusObj.STARTED + '</p>');
		infoBox.append('<p>Mode: ' + StatusObj.MODE + '</p>');
		infoBox.append('<p>DPI: ' + StatusObj.DPI + '</p>');
		infoBox.show();
		updateBoxes();
	}

	var socket;
	var pingIntervalId;

	// function scanSuccess(data, textStatus, jqXHR){
	// 	console.log(data);
	// 	$('#scanbutton').data('state', 0);
	// 	$('#scanbutton').text('Scan');
	// }
	function Connect(){
		console.log('CONNECT');
		socket = new WebSocket('{{websocket_url}}');
	}
	Connect();

	socket.onopen = function(){
		console.log('SOCKET OPEN');
		setConnectionUp();
		getAllImages();
		pingIntervalId = setInterval(sendPing, 5000);
	}
	socket.onclose = function(){
		console.log('SOCKET CLOSED');
		setConnectionDown();
		clearInterval(pingIntervalId);
		setTimeout(Connect, 10);
	}


	socket.onmessage = function(msg){
		if (msg.data != 'PONG'){
			var responseStructure = JSON.parse(msg.data);
			console.log(responseStructure);
			if (responseStructure.TYPE == 'RESPONSE') {
				if (responseStructure.SUCCESS  == 'TRUE'){
					setScannerBusy(responseStructure.INFO);
				} else {
					setScannerAvailable();
				}
			} else if (responseStructure.TYPE == 'STATUS'){
				if (responseStructure.SUCCESS  == 'TRUE'){
					var filename = responseStructure.FILENAME;
					loadImage(filename);
					setScannerAvailable();
				}

			} else if (responseStructure.TYPE == 'SCANNER'){
				if (responseStructure.STATUS == 'ACTIVE'){
					setScannerBusy(responseStructure.INFO);
				} else {
					setScannerAvailable();
				}
			} else if (responseStructure.TYPE == 'FILES'){
				handle_files_msg(responseStructure);
			}
			message(msg.data);
		}
	}

	function handle_files_msg(files_structure){
		if (files_structure.FILES_EXIST == 'TRUE') {
			loadImage(files_structure.LATEST_IMAGE);
			setImages(files_structure.IMAGE_LIST)
		}
	}

	function message(msg){
		console.log(msg);
		$('.messages').append('<p>' + msg + '</p>');
	}

	function sendPing(){
		//console.log('Ping');
		socket.send('PING');
	}

	$('#scanbutton').click(function(){
		if ($(this).data('state') == 0){
			var formObject = {
				'ACTION' : 'SCAN',
				'RESOLUTION' : $('#DPISelect').val(),
				'MODE' : $('#ModeSelect').val(),
			};
			console.log(JSON.stringify(formObject));
			socket.send(JSON.stringify(formObject));
			$(this).data('state', 1);
		}
	});

	function setImages(imageList){
		//TODO this function is bollocks, refactor
		//Loop image list provided, any new ones are loaded
		var ul = $('#outputListUl');
		$.each(imageList, function(i, val){
			append_li_with_link(ul, val)
		});
	}
	function append_li_with_link(ul, img_info){
		var li = $( document.createElement('li') ),
			a = $( document.createElement('a'));
		a.attr('href', '/scans/'+img_info[0]);
		a.append(img_info[1]);
		li.append(a);
		ul.append(li);
	}
	function loadImage(image){
		var img = new Image();
		img.onload = function () {
			//check height and limit size accordingly
			if (img.height > MAX_IMAGE_HEIGHT){
				ratio = MAX_IMAGE_HEIGHT / img.height;
				console.log(ratio);
				img.height = MAX_IMAGE_HEIGHT;
				img.width = img.width * ratio;
			}
			var a = $( document.createElement('a')),
				container = $('#latest_scan');
			container.empty()
			a.attr('href', img.src);
			a.append(img);
			container.append(a);
		};
		img.src = '/scans/' + image;
	}

	function getAllImages() {
		var formObject = {
				'ACTION' : 'GET_FILES'
			};
		console.log(JSON.stringify(formObject));
		socket.send(JSON.stringify(formObject));
	}
	$('#reloadButton').click(getAllImages);
})
